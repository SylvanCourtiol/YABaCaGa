{
    "extensions": {
        "eventsTimeline": {
            "events": [
            ],
            "patterns": [
            ],
            "timelines": [
                {
                    "eventInstances": [
                    ],
                    "name": "Timeline_1",
                    "order": 0,
                    "patternInstances": [
                    ]
                }
            ]
        },
        "recordAndReplay": {
            "filters": {
            }
        }
    },
    "library": {
        "classes": [
            {
                "className": "Whiteboard",
                "color": 0,
                "definition": {
                    "inputs": [
                        {
                            "name": "title",
                            "type": "STRING"
                        },
                        {
                            "name": "backgroundColor",
                            "type": "STRING"
                        },
                        {
                            "name": "chatMessage",
                            "type": "STRING"
                        },
                        {
                            "name": "clear",
                            "type": "IMPULSION"
                        },
                        {
                            "name": "ui_command",
                            "type": "STRING"
                        },
                        {
                            "name": "labelsVisible",
                            "type": "BOOL"
                        }
                    ],
                    "outputs": [
                        {
                            "name": "lastChatMessage",
                            "type": "STRING"
                        },
                        {
                            "name": "lastAction",
                            "type": "STRING"
                        },
                        {
                            "name": "ui_error",
                            "type": "STRING"
                        }
                    ],
                    "services": [
                        {
                            "arguments": [
                                {
                                    "name": "message",
                                    "type": "STRING"
                                }
                            ],
                            "name": "chat"
                        },
                        {
                            "name": "snapshot",
                            "replies": [
                                {
                                    "arguments": [
                                        {
                                            "name": "base64Png",
                                            "type": "DATA"
                                        }
                                    ],
                                    "name": "snapshotResult"
                                }
                            ]
                        },
                        {
                            "name": "clear"
                        },
                        {
                            "arguments": [
                                {
                                    "name": "type",
                                    "type": "STRING"
                                },
                                {
                                    "name": "x",
                                    "type": "DOUBLE"
                                },
                                {
                                    "name": "y",
                                    "type": "DOUBLE"
                                },
                                {
                                    "name": "width",
                                    "type": "DOUBLE"
                                },
                                {
                                    "name": "height",
                                    "type": "DOUBLE"
                                },
                                {
                                    "name": "fill",
                                    "type": "STRING"
                                },
                                {
                                    "name": "stroke",
                                    "type": "STRING"
                                },
                                {
                                    "name": "strokeWidth",
                                    "type": "DOUBLE"
                                }
                            ],
                            "name": "addShape",
                            "replies": [
                                {
                                    "arguments": [
                                        {
                                            "name": "elementId",
                                            "type": "INTEGER"
                                        }
                                    ],
                                    "name": "elementCreated"
                                }
                            ]
                        },
                        {
                            "arguments": [
                                {
                                    "name": "text",
                                    "type": "STRING"
                                },
                                {
                                    "name": "x",
                                    "type": "DOUBLE"
                                },
                                {
                                    "name": "y",
                                    "type": "DOUBLE"
                                },
                                {
                                    "name": "color",
                                    "type": "STRING"
                                }
                            ],
                            "name": "addText",
                            "replies": [
                                {
                                    "arguments": [
                                        {
                                            "name": "elementId",
                                            "type": "INTEGER"
                                        }
                                    ],
                                    "name": "elementCreated"
                                }
                            ]
                        },
                        {
                            "arguments": [
                                {
                                    "name": "base64",
                                    "type": "DATA"
                                },
                                {
                                    "name": "x",
                                    "type": "DOUBLE"
                                },
                                {
                                    "name": "y",
                                    "type": "DOUBLE"
                                },
                                {
                                    "name": "width",
                                    "type": "DOUBLE"
                                },
                                {
                                    "name": "height",
                                    "type": "DOUBLE"
                                }
                            ],
                            "name": "addImage",
                            "replies": [
                                {
                                    "arguments": [
                                        {
                                            "name": "elementId",
                                            "type": "INTEGER"
                                        }
                                    ],
                                    "name": "elementCreated"
                                }
                            ]
                        },
                        {
                            "arguments": [
                                {
                                    "name": "url",
                                    "type": "STRING"
                                },
                                {
                                    "name": "x",
                                    "type": "DOUBLE"
                                },
                                {
                                    "name": "y",
                                    "type": "DOUBLE"
                                }
                            ],
                            "name": "addImageFromUrl",
                            "replies": [
                                {
                                    "arguments": [
                                        {
                                            "name": "elementId",
                                            "type": "INTEGER"
                                        }
                                    ],
                                    "name": "elementCreated"
                                }
                            ]
                        },
                        {
                            "arguments": [
                                {
                                    "name": "elementId",
                                    "type": "INTEGER"
                                }
                            ],
                            "name": "remove",
                            "replies": [
                                {
                                    "arguments": [
                                        {
                                            "name": "succeeded",
                                            "type": "BOOL"
                                        }
                                    ],
                                    "name": "actionResult"
                                }
                            ]
                        },
                        {
                            "arguments": [
                                {
                                    "name": "elementId",
                                    "type": "INTEGER"
                                },
                                {
                                    "name": "dx",
                                    "type": "DOUBLE"
                                },
                                {
                                    "name": "dy",
                                    "type": "DOUBLE"
                                }
                            ],
                            "name": "translate",
                            "replies": [
                                {
                                    "arguments": [
                                        {
                                            "name": "succeeded",
                                            "type": "BOOL"
                                        }
                                    ],
                                    "name": "actionResult"
                                }
                            ]
                        },
                        {
                            "arguments": [
                                {
                                    "name": "elementId",
                                    "type": "INTEGER"
                                },
                                {
                                    "name": "x",
                                    "type": "DOUBLE"
                                },
                                {
                                    "name": "y",
                                    "type": "DOUBLE"
                                }
                            ],
                            "name": "moveTo",
                            "replies": [
                                {
                                    "arguments": [
                                        {
                                            "name": "succeeded",
                                            "type": "BOOL"
                                        }
                                    ],
                                    "name": "actionResult"
                                }
                            ]
                        },
                        {
                            "arguments": [
                                {
                                    "name": "elementId",
                                    "type": "INTEGER"
                                },
                                {
                                    "name": "property",
                                    "type": "STRING"
                                },
                                {
                                    "name": "value",
                                    "type": "STRING"
                                }
                            ],
                            "name": "setStringProperty",
                            "replies": [
                                {
                                    "arguments": [
                                        {
                                            "name": "succeeded",
                                            "type": "BOOL"
                                        }
                                    ],
                                    "name": "actionResult"
                                }
                            ]
                        },
                        {
                            "arguments": [
                                {
                                    "name": "elementId",
                                    "type": "INTEGER"
                                },
                                {
                                    "name": "property",
                                    "type": "STRING"
                                },
                                {
                                    "name": "value",
                                    "type": "DOUBLE"
                                }
                            ],
                            "name": "setDoubleProperty",
                            "replies": [
                                {
                                    "arguments": [
                                        {
                                            "name": "succeeded",
                                            "type": "BOOL"
                                        }
                                    ],
                                    "name": "actionResult"
                                }
                            ]
                        },
                        {
                            "name": "getElementIds",
                            "replies": [
                                {
                                    "arguments": [
                                        {
                                            "name": "jsonArray",
                                            "type": "STRING"
                                        }
                                    ],
                                    "name": "elementIds"
                                }
                            ]
                        },
                        {
                            "name": "getElements",
                            "replies": [
                                {
                                    "arguments": [
                                        {
                                            "name": "jsonArray",
                                            "type": "STRING"
                                        }
                                    ],
                                    "name": "elements"
                                }
                            ]
                        },
                        {
                            "name": "showLabels"
                        },
                        {
                            "name": "hideLabels"
                        }
                    ]
                },
                "description": "",
                "icon": -1,
                "package": "",
                "plugin": "ingescape_class",
                "uuid": "118ec52d-5aba-5ee0-baa7-ae34d567f092",
                "version": ""
            },
            {
                "className": "Server",
                "color": 0,
                "definition": {
                    "inputs": [
                        {
                            "name": "receiveFromPlayer",
                            "type": "DATA"
                        },
                        {
                            "name": "image",
                            "type": "DATA"
                        }
                    ],
                    "outputs": [
                        {
                            "name": "sendToPlayer",
                            "type": "DATA"
                        },
                        {
                            "name": "prompt",
                            "type": "STRING"
                        },
                        {
                            "name": "title",
                            "type": "STRING"
                        },
                        {
                            "name": "backgroundColor",
                            "type": "STRING"
                        },
                        {
                            "name": "chatMessage",
                            "type": "STRING"
                        },
                        {
                            "name": "clear",
                            "type": "IMPULSION"
                        },
                        {
                            "name": "ui_command",
                            "type": "STRING"
                        },
                        {
                            "name": "labelsVisible",
                            "type": "BOOL"
                        }
                    ]
                },
                "description": "",
                "icon": -1,
                "package": "",
                "plugin": "ingescape_class",
                "uuid": "a32b6240-930a-459b-ae67-6c42279c5693",
                "version": ""
            },
            {
                "className": "Client",
                "color": 0,
                "definition": {
                    "inputs": [
                        {
                            "name": "receiveFromServer",
                            "type": "DATA"
                        }
                    ],
                    "outputs": [
                        {
                            "name": "sendToServer",
                            "type": "DATA"
                        }
                    ]
                },
                "description": "",
                "icon": -1,
                "package": "",
                "plugin": "ingescape_class",
                "uuid": "b06facba-315d-4be8-9860-1064c2867b00",
                "version": ""
            },
            {
                "className": "AI",
                "color": 0,
                "definition": {
                    "inputs": [
                        {
                            "name": "prompt",
                            "type": "STRING"
                        }
                    ],
                    "outputs": [
                        {
                            "name": "image",
                            "type": "DATA"
                        }
                    ]
                },
                "description": "",
                "icon": -1,
                "package": "",
                "plugin": "ingescape_class",
                "uuid": "7700e712-ab00-4cd3-ab5c-d5e7bfe3718c",
                "version": ""
            }
        ],
        "scripts": [
            {
                "code": "//\n// Test\n//\n// created on 2025-01-10\n//\n\n// The script language documentation is available at\n// https://ingescape.com/verification-validation-using-ingescape/\n\n\"My sample block\" {\n    // -> \"manual entry in the execution report\"\n\n    // Input allocation\n    // MyAgent.my_input = 12\n\n    // Output verification\n    // assert MyAgent.my_output >= 5.43\n\n    // Service call\n    // MyAgent.my_service (\"arg1\", 12.34)\n\n    // Reply verification\n    // assert my_reply from CallerAgent with arg2 = 34.56 and arg3 = \"this value\"\n}\n\n",
                "name": "Test",
                "package": "",
                "uuid": "869d5cea-f93d-4360-8e9f-8bc9c059960e"
            }
        ],
        "snippets": [
            {
                "code": "let inputMessage = Igs.createInput(\"message\", IOPValueType.STRING);\n\ninputMessage.written.connect(() => {\n    log(\"New message\", inputMessage.currentValue);\n    Igs.callService(\"Whiteboard\", \"chat\", inputMessage.currentValue);\n});\n",
                "name": "ParrotBot",
                "uuid": "8336dd30-fddf-486a-956a-d672b1d25aee"
            },
            {
                "code": "// My snippet\nlet inputRun = Igs.createInput(\"run\", IOPValueType.IMPULSION);\nlet inputStop = Igs.createInput(\"stop\", IOPValueType.IMPULSION);\n\nlet timerId = -1;\nlet cx = 550.0;\nlet cy = 450.0;\nlet r = 300.0;\nlet rx = 50.0;\nlet ry = 25.0;\nlet elementId = 2;\nlet angle = 0;\nlet deltaAngle = Math.PI/90;\n\n\ninputRun.written.connect(() => {\n    if (timerId >= 0)\n        clearInterval(timerId);\n\n    Igs.callService(\"Whiteboard\", \"clear\");\n    Igs.callService(\"Whiteboard\", \"showLabels\");\n    Igs.callService(\"Whiteboard\", \"chat\", \"This is a test message\");\n    Igs.callService(\"Whiteboard\", \"addText\", \"Hello world\", Number(100.0), Number(10.0), \"blue\");\n    Igs.callService(\"Whiteboard\", \"addShape\", \"rectangle\", Number(10.0), Number(100.0), Number(100.0), Number(50.0), \"green\", \"red\", Number(4));\n    Igs.callService(\"Whiteboard\", \"addShape\", \"ellipse\", Number(cx + r - rx), Number(cy - ry), Number(2 * rx), Number(2 * ry), \"red\", \"orange\", Number(4));\n    Igs.callService(\"Whiteboard\", \"addShape\", \"rectangle\", Number(cx + r), Number(cy), Number(10), Number(10), \"black\", \"transparent\", Number(0));\n    Igs.callService(\"Whiteboard\", \"addImageFromUrl\", \"https://raw.githubusercontent.com/TakWolf/NyanCatEverywhere/master/img/nyancat.gif\", Number(250), Number(100));\n    \n    timerId = setInterval(moveElement, 50);\n});\n\n\ninputStop.written.connect(() => {\n    if (timerId >= 0)\n        clearInterval(timerId);\n});\n\n\nfunction moveElement()\n{\n    let newAngle = angle + deltaAngle;\n    let x = cx + r * Math.cos(newAngle);\n    let y = cy + r * Math.sin(newAngle);\n    angle = newAngle;\n    \n    let dx = 8 * (Math.random() - 0.5);\n    let dy = 8 * (Math.random() - 0.5);\n    \n    Igs.callService(\"Whiteboard\", \"moveTo\", elementId, Number(x), Number(y));\n    Igs.callService(\"Whiteboard\", \"translate\", elementId + 1, Number(dx), Number(dy));\n}",
                "name": "Test",
                "uuid": "fba53474-349d-4ea5-a56c-4353bfc103cf"
            },
            {
                "code": "let inputRun = Igs.createInput(\"run\", IOPValueType.IMPULSION);\nlet inputStop = Igs.createInput(\"stop\", IOPValueType.IMPULSION);\n\nlet timerId = -1;\nlet elementId = 0;\nlet cy = 200;\nlet r = 200; \nlet angle = 0;\nlet deltaAngle = Math.PI/90;\n\ninputRun.written.connect(() => {\n    if (timerId >= 0)\n        clearInterval(timerId);\n\n    Igs.callService(\"Whiteboard\", \"clear\");\n    Igs.callService(\"Whiteboard\", \"hideLabels\");\n    Igs.callService(\"Whiteboard\", \"addImageFromUrl\", \"https://upload.wikimedia.org/wikipedia/fr/1/1b/Logo-toulouse-inp-N7.png\", Number(50), Number(cy));\n    Igs.callService(\"Whiteboard\", \"addShape\", \"rectangle\", Number(640), Number(90), Number(185), Number(65), \"white\", \"#1947BA\", Number(4));\n    Igs.callService(\"Whiteboard\", \"addText\", \"Cours IHM\", Number(650), Number(100), \"#1947BA\");\n    timerId = setInterval(moveElement, 25);\n});\n\n\ninputStop.written.connect(() => {\n    if (timerId >= 0)\n        clearInterval(timerId);\n});\n\n\nfunction moveElement()\n{\n    let newAngle = angle + deltaAngle;\n    let dy = r * (Math.sin(newAngle) - Math.sin(angle));\n    angle = newAngle;\n    \n    Igs.callService(\"Whiteboard\", \"translate\", elementId, Number(0), Number(dy));\n}\n",
                "name": "N7",
                "uuid": "e5367605-70ab-47c8-a0f5-e8b992205e0d"
            },
            {
                "code": "// My snippet\nlet inputRun = Igs.createInput(\"run\", IOPValueType.IMPULSION);\nlet inputStop = Igs.createInput(\"stop\", IOPValueType.IMPULSION);\n\nlet timerId = -1;\nlet cx = 200.0;\nlet cy = 200.0;\nlet r = 100.0;\nlet elementId1 = 0;\nlet elementId2 = 1;\nlet isOn = false;\nlet colorOn = \"orange\";\nlet colorOff = \"#FFFFFF\";\nlet strokeWidthOn = 4.0;\nlet strokeWidthOff = 2.0;\n\ninputRun.written.connect(() => {\n    if (timerId >= 0)\n        clearInterval(timerId);\n\n    Igs.callService(\"Whiteboard\", \"clear\");\n    Igs.callService(\"Whiteboard\", \"hideLabels\");\n    Igs.callService(\"Whiteboard\", \"addShape\", \"ellipse\", Number(cx - r), Number(cy - r), Number(2 * r), Number(2 * r), \n                    isOn ? colorOn : colorOff, \"black\", Number(isOn ? strokeWidthOn : strokeWidthOff));\n    Igs.callService(\"Whiteboard\", \"addText\", isOn ? \"ON\" : \"OFF\", Number(170.0), Number(10.0), \"blue\");\n   \n    timerId = setInterval(changeColor, 200);\n});\n\n\ninputStop.written.connect(() => {\n    if (timerId >= 0)\n        clearInterval(timerId);\n});\n\n\nfunction changeColor()\n{\n    isOn = !isOn;\n    Igs.callService(\"Whiteboard\", \"setStringProperty\", elementId1, \"fill\", isOn ? colorOn : colorOff);\n    Igs.callService(\"Whiteboard\", \"setDoubleProperty\", elementId1, \"strokewidth\", Number(isOn ? strokeWidthOn : strokeWidthOff));\n    \n    Igs.callService(\"Whiteboard\", \"setStringProperty\", elementId2, \"text\", isOn ? \"ON\" : \"OFF\");\n}\n",
                "name": "Flashing",
                "uuid": "189102c2-a2f6-4d18-a43a-909ac164f7b1"
            },
            {
                "code": "let inputRun = Igs.createInput(\"run\", IOPValueType.IMPULSION);\nlet inputStop = Igs.createInput(\"stop\", IOPValueType.IMPULSION);\n\nlet timerId = -1;\nlet elementId = 0;\nlet cy = 200;\nlet r = 200; \nlet angle = 0;\nlet deltaAngle = Math.PI/90;\n\ninputRun.written.connect(() => {\n    if (timerId >= 0)\n        clearInterval(timerId);\n\n    Igs.callService(\"Whiteboard\", \"clear\");\n    Igs.callService(\"Whiteboard\", \"hideLabels\");\n    Igs.callService(\"Whiteboard\", \"addImageFromUrl\", \"https://www.upssitech.eu/wp-content/uploads/2016/12/logo_upssitech.png\", Number(50), Number(cy));\n    Igs.callService(\"Whiteboard\", \"addShape\", \"rectangle\", Number(640), Number(90), Number(185), Number(65), \"white\", \"#1947BA\", Number(4));\n    Igs.callService(\"Whiteboard\", \"addText\", \"Cours SRI\", Number(650), Number(100), \"#1947BA\");\n    timerId = setInterval(moveElement, 25);\n});\n\n\ninputStop.written.connect(() => {\n    if (timerId >= 0)\n        clearInterval(timerId);\n});\n\n\nfunction moveElement()\n{\n    let newAngle = angle + deltaAngle;\n    let dy = r * (Math.sin(newAngle) - Math.sin(angle));\n    angle = newAngle;\n    \n    Igs.callService(\"Whiteboard\", \"translate\", elementId, Number(0), Number(dy));\n}\n",
                "name": "UPSSITECH",
                "uuid": "0eb791cc-f16a-4f64-8a99-1a1eb8c976ab"
            }
        ]
    },
    "systemViews": [
        {
            "children": [
                {
                    "agent": {
                    },
                    "class": "b06facba-315d-4be8-9860-1064c2867b00",
                    "comment": "",
                    "height": 100,
                    "name": "Player2",
                    "simulationTime": 5000,
                    "uuid": "4e432ea6-9a2c-4f67-94ae-a9ca80b762b6",
                    "width": 250,
                    "x": -2.8856729502787175,
                    "y": 365.2218382352917
                },
                {
                    "agent": {
                    },
                    "class": "b06facba-315d-4be8-9860-1064c2867b00",
                    "comment": "",
                    "height": 100,
                    "name": "Player1",
                    "simulationTime": 5000,
                    "uuid": "9ac5290c-2cfd-42bc-8aa0-fe37035e805f",
                    "width": 250,
                    "x": 6.5083406710324425,
                    "y": 200.43050171077357
                },
                {
                    "agent": {
                    },
                    "class": "7700e712-ab00-4cd3-ab5c-d5e7bfe3718c",
                    "comment": "",
                    "height": 100,
                    "name": "AI",
                    "simulationTime": 5000,
                    "uuid": "9d2ce334-9e3b-4107-9d72-19d2280b0800",
                    "width": 250,
                    "x": 412.19048174780994,
                    "y": -15.609487232241236
                },
                {
                    "agent": {
                        "instances": [
                            {
                                "commandLine": "C:\\Users\\sylva\\Documents\\WS\\IHM\\Whiteboard\\Whiteboard.exe",
                                "hostname": "LAPTOP-JB0J06CC",
                                "ip": "192.168.56.1",
                                "isAttachedToCircle": false,
                                "uuid": "db4c7738-9153-4b23-9319-9b5102bd64f0"
                            },
                            {
                                "commandLine": "C:\\Users\\sylva\\Documents\\WS\\IHM\\Whiteboard\\Whiteboard.exe",
                                "hostname": "LAPTOP-JB0J06CC",
                                "ip": "127.0.0.1",
                                "isAttachedToCircle": false,
                                "uuid": "9b1f763d-4843-44b9-91f4-5c696f6d0a87"
                            },
                            {
                                "commandLine": "/media/lucas/T7/repositories/projet_IHM/agents/Whiteboard/bin/Whiteboard",
                                "hostname": "adell",
                                "ip": "172.22.224.176",
                                "isAttachedToCircle": false,
                                "uuid": "2813c87b-ca64-4605-9e5f-9dcb43b6c9dc"
                            }
                        ]
                    },
                    "class": "118ec52d-5aba-5ee0-baa7-ae34d567f092",
                    "comment": "",
                    "height": 202,
                    "name": "Whiteboard",
                    "simulationTime": 5000,
                    "uuid": "88a1d5c4-70a1-43d5-9073-97a385e1c40b",
                    "width": 252,
                    "x": 832.496406003375,
                    "y": 292.8226345561536
                },
                {
                    "agent": {
                        "instances": [
                            {
                                "commandLine": "\"C:\\Program Files\\Ingescape\\Ingescape Circle v4\\igsProxy.exe\" --port 40500 --name Proxy --device \"Loopback Pseudo-Interface 1\" --license C:/Users/sylva/Documents/Ingescape/licenses --ws ws://127.0.0.1:8080",
                                "hostname": "LAPTOP-JB0J06CC",
                                "ip": "127.0.0.1",
                                "isAttachedToCircle": false,
                                "uuid": "342587f4-6416-40e0-8561-ca8cca0098c4"
                            },
                            {
                                "commandLine": "\"C:/Program Files/Ingescape/Ingescape Circle v4/igsProxy.exe\" --port 40500 --name Proxy --device \"Loopback Pseudo-Interface 1\" --license C:/Users/sylva/Documents/Ingescape/licenses --ws ws://127.0.0.1:8080",
                                "isAttachedToCircle": true,
                                "uuid": "e6e6b7ad-e20c-44e0-8c4f-dfecd8873eb0"
                            }
                        ]
                    },
                    "class": "48879EBE0FBC48D8B429F11510954D9B",
                    "comment": "",
                    "height": 100,
                    "name": "Proxy",
                    "simulationTime": 5000,
                    "uuid": "d027553e-bb4f-4054-a287-a637d392c349",
                    "width": 250,
                    "x": -19.224080986602075,
                    "y": 654.960204882343
                },
                {
                    "data": {
                        "data_decoder": "BINARY",
                        "msg_type": "",
                        "proto_file_path": "",
                        "string_decoder": "PLAIN_TEXT"
                    },
                    "height": 112,
                    "name": "",
                    "tool": "com.ingescape.circle.tool.observer",
                    "uuid": "767d0232-ba57-46d2-bdec-fdc3d0f8b64e",
                    "width": 270,
                    "x": 773.444652726558,
                    "y": 168.38947880808814
                },
                {
                    "agent": {
                        "instances": [
                            {
                                "commandLine": "\"C:\\Program Files\\Ingescape\\Ingescape Circle v4\\igsProxy.exe\" --port 40500 --name Proxy --device \"Loopback Pseudo-Interface 1\" --license C:/Users/sylva/Documents/Ingescape/licenses --ws ws://127.0.0.1:8080",
                                "hostname": "LAPTOP-JB0J06CC",
                                "ip": "127.0.0.1",
                                "isAttachedToCircle": false,
                                "uuid": "0226e2ea-5a91-4f31-9965-c47b137ca30e"
                            }
                        ]
                    },
                    "class": "a32b6240-930a-459b-ae67-6c42279c5693",
                    "comment": "",
                    "height": 246,
                    "name": "YABaCaGaServer",
                    "simulationTime": 5000,
                    "uuid": "0f698e9c-94df-4d84-9f48-df7192d668ae",
                    "width": 250,
                    "x": 410.3071648469902,
                    "y": 248.23905893910188
                }
            ],
            "links": {
                "mappings": [
                    {
                        "from": "YABaCaGaServer",
                        "fromInput": "receiveFromPlayer",
                        "to": "Player1",
                        "toOutput": "sendToServer"
                    },
                    {
                        "from": "YABaCaGaServer",
                        "fromInput": "receiveFromPlayer",
                        "to": "Player2",
                        "toOutput": "sendToServer"
                    },
                    {
                        "from": "Player1",
                        "fromInput": "receiveFromServer",
                        "to": "YABaCaGaServer",
                        "toOutput": "sendToPlayer"
                    },
                    {
                        "from": "Player2",
                        "fromInput": "receiveFromServer",
                        "to": "YABaCaGaServer",
                        "toOutput": "sendToPlayer"
                    },
                    {
                        "from": "YABaCaGaServer",
                        "fromInput": "image",
                        "to": "AI",
                        "toOutput": "image"
                    },
                    {
                        "from": "AI",
                        "fromInput": "prompt",
                        "to": "YABaCaGaServer",
                        "toOutput": "prompt"
                    },
                    {
                        "from": "Whiteboard",
                        "fromInput": "title",
                        "to": "YABaCaGaServer",
                        "toOutput": "title"
                    },
                    {
                        "from": "Whiteboard",
                        "fromInput": "backgroundColor",
                        "to": "YABaCaGaServer",
                        "toOutput": "backgroundColor"
                    },
                    {
                        "from": "Whiteboard",
                        "fromInput": "chatMessage",
                        "to": "YABaCaGaServer",
                        "toOutput": "chatMessage"
                    },
                    {
                        "from": "Whiteboard",
                        "fromInput": "clear",
                        "to": "YABaCaGaServer",
                        "toOutput": "clear"
                    },
                    {
                        "from": "Whiteboard",
                        "fromInput": "ui_command",
                        "to": "YABaCaGaServer",
                        "toOutput": "ui_command"
                    },
                    {
                        "from": "Whiteboard",
                        "fromInput": "labelsVisible",
                        "to": "YABaCaGaServer",
                        "toOutput": "labelsVisible"
                    }
                ],
                "others": [
                    {
                        "destination": "767d0232-ba57-46d2-bdec-fdc3d0f8b64e",
                        "destinationIO": {
                            "name": "wildcard",
                            "type": "INPUT"
                        },
                        "source": "0f698e9c-94df-4d84-9f48-df7192d668ae",
                        "sourceIO": {
                            "name": "chatMessage",
                            "type": "OUTPUT"
                        }
                    }
                ]
            },
            "name": "Main view"
        }
    ]
}
